article id="answer_#{answer.id}" class="answer panel panel-default #{"best-answer" if answer.best?}"
  .panel-body
    .col-md-1
      .voting
        - unless answer.user == current_user || answer.voted_by?(current_user)
          = link_to vote_up_answer_path(answer), class: "vote-up", remote: true, data: { type: :json }, method: :patch do
            span.glyphicon.glyphicon-chevron-up
        strong.votes = answer.total_votes
        - unless answer.user == current_user || answer.voted_by?(current_user)
          = link_to vote_down_answer_path(answer), class: "vote-down", remote: true, data: { type: :json }, method: :patch do
            span.glyphicon.glyphicon-chevron-down
    .col-md-11
      .answer-body
        = answer.body
    .answer-author.text-right
      small
        |by #{answer.user.username} #{time_ago_in_words(answer.created_at)} ago  
        - if answer.updated_at.to_s > answer.created_at.to_s
          span.text-muted
            |  edited #{time_ago_in_words(answer.updated_at)} ago
    - if answer.attachments.any?
      ul.answer-attachments
        - answer.attachments.each do |a|
          li = link_to a.file.filename, a.file.url
    .comments-wrapper
      - if answer.comments.size > 0
        ul.comments
          = render answer.comments
  .panel-footer
    ul.answer-management
      - if user_signed_in?
        - if current_user == answer.question.user && !answer.best? && !has_best_answer
          li
            = link_to [:mark_best, answer], class: "mark-best-answer", method: :post do
              span.glyphicon.glyphicon-ok
        - if current_user == answer.user
          li
            = link_to "#", class: "edit-answer" do
              span.glyphicon.glyphicon-pencil
          li
            = link_to answer, remote: true, class: "delete-answer", id: "delete-answer", method: :delete, data: { confirm: "Are you sure?", id: answer.id } do
              span.glyphicon.glyphicon-remove
        li
          = link_to "Comment", "#", class: "comment-answer"
    .comment-answer-form
      = render "comments/form", commentable: answer, remote: true
